	PAGE	66
	TITLE	SMALL-C	I/O	LIBRARY
	SUBTTL	DEFINITIONS
FCBSIZ	EQU	50
RECLEN	EQU	0
BUFSIZ	EQU	256
DOSCAL	EQU	4419H
DOSOPN	EQU	4424H
DOSINT	EQU	4420H
DOSCLS	EQU	4428H
GETBYT	EQU	0013H
PUTBYT	EQU	001BH
TOCONS	EQU	0033H
TSTKEY	EQU	002BH
LINPUT	EQU	0040H
FROMKB	EQU	0049H
DOFCB	EQU	401DH
KBFCB	EQU	4015H
PRFCB	EQU	4025H
DOSEXT	EQU	402DH
DOSCMD	EQU	4405H
DOSERR	EQU	4409H
DOSRES	EQU	443FH
DOSPOS	EQU	4442H
POSEOF	EQU	4448H
NULL	EQU	0
EOFILE	EQU	-1
FALSE	EQU	0
TRUE	EQU	1
CR	EQU	13
EXTRN	MALLOC,	CFREE
EXTRN	CCC2,	CCC22
SLFCB	EQU	0
SLMODE	EQU	2
SLRSLT	EQU	3
SLFLAG	EQU	4
SLPUSH	EQU	5
SLSIZE	EQU	6
STDIN::	DEFW	KBFCB
	DEFB	'R'
	DEFB	0
	DEFB	0
	DEFB	0
STDOUT::	DEFW	DOFCB
	DEFB	'W'
	DEFB	0
	DEFB	0
	DEFB	0
STDERR::	DEFW	DOFCB
	DEFB	'W'
	DEFB	0
	DEFB	0
	DEFB	0

	DEFW	0
	DEFS	4

	DEFW	0
	DEFS	4

	DEFW	0
	DEFS	4

	DEFW	0
	DEFS	4

	DEFW	0
	DEFS	4
IOBEND:
DEVTAB:	DEFB	'*KB*DO*PR'
	DEFB	0
	SUBTTL	MAIN	FUNCTIONS
CIOUPP::
	CP	97
	RET	C
	CP	7BH
	RET	NC
	ADD	A,-32
	RET
GETFCB::
	LD	E,(IX+SLFCB)
	LD	D,(IX+SLFCB+1)
	RET
FILENO::	POP	IY
	POP	IX
	PUSH	IX
	CALL	GETFCB
	EX	DE,HL
	JP	(IY)
FOPEN::	LD	DE,IOBEND
	LD	HL,STDIN
SLOT:	LD	A,(HL)
	INC	HL
	OR	(HL)
	JR	Z,SLOTOK
	LD	BC,SLSIZE-1
	ADD	HL,BC
	RST	18H
	JR	NZ,SLOT
	LD	HL,NULL
	RET
SLOTOK:	DEC	HL
	PUSH	HL
	POP	IX
FSLOT::	POP	IY
	POP	DE
	PUSH	DE
	LD	HL,DEVTAB
	LD	C,0
OPN10:	LD	B,3
	PUSH	DE
	PUSH	HL
OPN20:	LD	A,(DE)
	CALL	CIOUPP
	CP	(HL)
	JR	NZ,OPN30
	INC	HL
	INC	DE
	DJNZ	OPN20
	LD	A,(DE)
	OR	A
	JR	NZ,OPN30
	POP	HL
	POP	DE
	LD	A,C
	OR	A
	JR	NZ,OPN22
	LD	DE,KBFCB
	JR	OPN26
OPN22:	CP	1
	JR	NZ,OPN24
	LD	DE,DOFCB
	JR	OPN26
OPN24:	LD	DE,PRFCB
OPN26:	POP	AF
	POP	BC
	PUSH	BC
	PUSH	AF
	LD	A,(BC)
	CALL	CIOUPP
	LD	C,A
	JR	OPENOK
OPN30:	LD	DE,3
	POP	HL
	ADD	HL,DE
	POP	DE
	INC	C
	LD	A,(HL)
	OR	A
	JR	NZ,OPN10
	LD	HL,BUFSIZ+FCBSIZ
	PUSH	HL
	CALL	MALLOC
	POP	BC
	LD	A,L
	OR	H
	JR	NZ,OPN70
	JP	(IY)
OPN70:	LD	D,H
	LD	E,L
	POP	HL
	POP	BC
	PUSH	BC
	PUSH	HL
	LD	A,(BC)
	CALL	CIOUPP
	LD	C,A
OPNAME:	PUSH	DE
OPN40:	LD	A,(HL)
	CALL	CIOUPP
	LD	(DE),A
	INC	HL
	INC	DE
	OR	A
	JR	NZ,OPN40
	POP	DE
	LD	HL,FCBSIZ
	ADD	HL,DE
	LD	B,RECLEN
	CALL	DOSOPN
	JR	Z,OPN60
	LD	A,C
	CP	'R'
	JR	Z,NOTOPN
	CALL	DOSINT
	JR	Z,OPN60
NOTOPN:	PUSH	DE
	CALL	CFREE
	POP	BC
	LD	HL,0
	JP	(IY)
OPN60:	LD	HL,9
	ADD	HL,DE
	LD	(HL),1
	CALL	GETBYT
	CALL	DOSRES
	LD	A,C
	CP	'A'
	CALL	Z,POSEOF
OPENOK:	LD	(IX+SLFCB),E
	LD	(IX+SLFCB+1),D
	LD	(IX+SLMODE),C
	XOR	A
	LD	(IX+SLRSLT),A
	LD	(IX+SLFLAG),A
	LD	(IX+SLPUSH),A
	PUSH	IX
	POP	HL
	JP	(IY)
FREOPE::	POP	BC
	POP	DE
	POP	HL
	POP	IX
	PUSH	IX
	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	IX
	CALL	FCLOSE
	POP	IX
	JP	FSLOT
FCLOSE::	POP	IY
	POP	IX
	PUSH	IX
	CALL	GETFCB
	LD	A,D
	OR	E
	JR	Z,FCLOOS
	LD	HL,51FFH
	RST	18H
	JR	NC,FCLOOS
	PUSH	DE
	CALL	DOSCLS
	CALL	CFREE
	POP	DE
FCLOOS:	XOR	A
	LD	B,SLSIZE
FCL010:	LD	(IX+0),A
	INC	IX
	DJNZ	FCL010
	JP	(IY)
GETC::
FGETC::	POP	IY
	POP	IX
	PUSH	IX
	PUSH	IY
	LD	A,(IX+SLFLAG)
	OR	A
	JR	Z,GGOON
	DEC	(IX+SLFLAG)
	LD	A,(IX+SLPUSH)
	JR	GOK
GGOON:	CALL	GETFCB
	CALL	GETB
	JR	Z,GOK
	LD	(IX+SLRSLT),A
	LD	HL,EOFILE
	RET
GOK:	LD	L,A
	LD	H,0
	RET
PUTC::
FPUTC::	POP	IY
PUTC1:	POP	HL
	POP	IX
	PUSH	IX
	PUSH	HL
	PUSH	IY
	LD	A,L
	CALL	GETFCB	;FCB to DE
	CALL	PUTB
	JR	Z,POK
	LD	(IX+SLRSLT),A
	LD	HL,EOFILE
	RET
POK:	LD	L,A
	LD	H,0
	RET
FFLUSH::	RET
EXIT::	LD	HL,STDIN
ELOOP:	LD	DE,IOBEND
	RST	18H
	JR	Z,EOUT
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	A,E
	OR	D
	JR	Z,EGOON
	DEC	HL
	PUSH	HL
	CALL	FCLOSE
	POP	HL
	INC	HL
EGOON:	LD	DE,SLSIZE-1
	ADD	HL,DE
	JR	ELOOP
EOUT:	POP	IY
	POP	HL
	JP	DOSEXT
PUTCHAR::	POP	DE
	POP	BC
	PUSH	BC
	PUSH	DE
	LD	HL,STDOUT
	PUSH	HL
	PUSH	BC
	CALL	PUTC
	POP	DE
	POP	DE
	RET
FGETS::	POP	DE
	POP	HL
	POP	BC
	POP	IX
	PUSH	IX
	PUSH	BC
	PUSH	HL
	PUSH	DE
	PUSH	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	Z,GSOUT
	CALL	GETFCB	;FCB to DE
	IF 0
	; No need. GETB() and GETBYT() are identical in this version.
	LD	HL,GETB
	LD	(SGOON1+1),HL
	LD	HL,51FFH
	RST	18H
	JR	NC,FG010	;brif FCB <5200H
	LD	HL,GETBYT
	LD	(SGOON1+1),HL
	ENDIF
FG010:	POP	HL
	PUSH	HL
	LD	A,(IX+SLFLAG)
	OR	A
	JR	Z,SGOON1
	DEC	(IX+SLFLAG)
	LD	A,(IX+SLPUSH)
	DEC	BC
	JR	GSOK
SGOON1:	CALL	GETB
	JR	Z,GSOK
	LD	(IX+SLRSLT),A
	XOR	A
	LD	(HL),A
	POP	HL
	LD	HL,0
	RET
GSOK:	LD	(HL),A
	INC	HL
	CP	CR
	JR	Z,GSOUT
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,SGOON1
GSOUT:	XOR	A
	LD	(HL),A
	POP	HL
	RET
FPUTS::	POP	DE
	POP	HL
	POP	IX
	PUSH	IX
	PUSH	HL
	PUSH	DE
	CALL	GETFCB	;FCB to DE
	PUSH	HL
	LD	HL,51FFH
	RST	18H
	POP	HL
	JR	NC,PSGOON	;brif FCB < 5200H
PS50:	LD	A,(HL)
	INC	HL
	OR	A
	RET	Z
	CALL	PUTBYT
	JR	Z,PS50
	LD	(IX+SLRSLT),A
	RET
PSGOON:	LD	A,(HL)
	INC	HL
	OR	A
	RET	Z
	CALL	PUTDEV
	JR	Z,PSGOON
	LD	(IX+SLRSLT),A
	RET
UNGETC::	POP	HL
	POP	DE
	POP	IX
	PUSH	IX
	PUSH	DE
	INC	(IX+SLFLAG)
	LD	(IX+SLPUSH),E
	JP	(HL)
FSEEK::	POP	IY
	POP	IX
	POP	BC
	POP	HL
	PUSH	HL
	PUSH	BC
	PUSH	IX
	PUSH	IY
	LD	A,H
	OR	L
	JR	NZ,FSKOUT
	CALL	GETFCB
	XOR	A
	LD	(IX+SLFLAG),A
	CALL	DOSPOS
	JR	Z,FSKOUT
	LD	(IX+SLRSLT),A
FSKOUT:	RET
	PAGE
	SUBTTL	PHYSICAL	BYTE	I/O
PUTB:
	PUSH	HL
	PUSH	AF
	LD	HL,51FFH
	RST	18H
	POP	HL
	EX	(SP),HL
	JR	C,PUTB1		;brif FCB >= 5200
	POP	AF
	JR	PUTDEV
PUTB1:	POP	AF
	CALL	PUTBYT
	RET
PUTDEV:
	PUSH	AF
	PUSH	DE
	CALL	TSTKEY
	OR	A
	JR	Z,PUT1
PUT2:	CALL	TSTKEY
	OR	A
	JR	Z,PUT2
PUT1:	POP	DE
	POP	AF
	CALL	PUTBYT
	XOR	A
	LD	A,L
	RET
GETB:
	JP	GETBYT
	RET
GETKEY::
	CALL	TSTKEY
	LD	H,0
	LD	L,A
	RET
	END
